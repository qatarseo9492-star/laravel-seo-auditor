<?php use Illuminate\Database\Migrations\Migration; use Illuminate\Database\Schema\Blueprint; use Illuminate\Support\Facades\Schema; use 
Illuminate\Support\Facades\DB; return new class extends Migration {
    public function up(): void { if (!Schema::hasColumn('topic_analyses', 'urls_signature')) { Schema::table('topic_analyses', function (Blueprint $table) { 
                $table->string('urls_signature')->nullable()->after('urls_list');
use Illuminate\Database\Migrations\Migration; }); use Illuminate\Database\Schema\Blueprint; // Backfill existing rows with deterministic signatures use 
Illuminate\Support\Facades\Schema; try { $rows = DB::table('topic_analyses')->select('id', 'urls_list')->get(); foreach ($rows as $row) { $arr = 
json_decode($row->urls_list, true); if use Illuminate\Support\Facades\DB; (!is_array($arr)) { $arr = []; }
                    // clean -> trim -> dedupe -> sort
return new class extends Migration { $arr = array_values(array_unique(array_filter(array_map('trim', $arr)))); sort($arr, SORT_NATURAL | SORT_FLAG_CASE); $sig = 
                    sha1(json_encode($arr, JSON_UNESCAPED_SLASHES)); DB::table('topic_analyses')->where('id', $row->id)->update(['urls_signature' => $sig]);
    public function up(): void } { } catch (\Throwable $e) {
        // Create full table if missing // If anything goes wrong, leave the column nullable and continue.
        if (!Schema::hasTable('topic_analyses')) { } Schema::create('topic_analyses', function (Blueprint $table) { // Add an index for faster lookups 
            Schema::table('topic_analyses', function (Blueprint $table) { $table->index('urls_signature', 'topic_analyses_urls_signature_index');
                $table->id(); }); $table->json('urls_list'); } $table->string('urls_signature')->nullable(); } $table->json('analysis_result')->nullable(); public 
                function down(): void { if (Schema::hasColumn('topic_analyses', 'urls_signature')) { Schema::table('topic_analyses', function (Blueprint $table) { 
                $table->dropIndex('topic_analyses_urls_signature_index'); $table->dropColumn('urls_signature'); $table->json('openai_metadata')->nullable(); }); 
                $table->timestamps(); } $table->index('urls_signature', 'topic_analyses_urls_signature_index'); }
            });};
            return;
        }
        // Add any missing columns (no "after" clauses)
        Schema::table('topic_analyses', function (Blueprint $table) { if (!Schema::hasColumn('topic_analyses', 'urls_list')) { 
                $table->json('urls_list')->nullable();
            }
            if (!Schema::hasColumn('topic_analyses', 'analysis_result')) { $table->json('analysis_result')->nullable();
            }
            if (!Schema::hasColumn('topic_analyses', 'openai_metadata')) { $table->json('openai_metadata')->nullable();
            }
            if (!Schema::hasColumn('topic_analyses', 'urls_signature')) { $table->string('urls_signature')->nullable();
            }
        });
        // Ensure index (ignore if exists)
        try { Schema::table('topic_analyses', function (Blueprint $table) { $table->index('urls_signature', 'topic_analyses_urls_signature_index');
            });
        } catch (\Throwable $e) {}
        // Optional backfill for existing rows without signature
        try { $rows = DB::table('topic_analyses')->select('id', 'urls_list', 'urls_signature')->get(); foreach ($rows as $row) { if (!empty($row->urls_signature)) 
                { continue; } $arr = json_decode($row->urls_list ?? '[]', true); if (!is_array($arr)) { $arr = []; } $arr = 
                array_values(array_unique(array_filter(array_map('trim', $arr)))); sort($arr, SORT_NATURAL | SORT_FLAG_CASE); $sig = sha1(json_encode($arr, 
                JSON_UNESCAPED_SLASHES)); DB::table('topic_analyses')->where('id', $row->id)->update(['urls_signature' => $sig]);
            }
        } catch (\Throwable $e) {}
    }
    public function down(): void {
        // Non-destructive rollback
        try { if (Schema::hasColumn('topic_analyses', 'urls_signature')) { Schema::table('topic_analyses', function (Blueprint $table) { try { 
                    $table->dropIndex('topic_analyses_urls_signature_index'); } catch (\Throwable $e) {} $table->dropColumn('urls_signature');
                });
            }
        } catch (\Throwable $e) {}
    }
};
